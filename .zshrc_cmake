#!/bin/zsh

function __project_error
{
	echo -e "\033[31m${1}\033[0m"
}

function __project_status
{
	echo -e "\033[2m${1}\033[0m"
}

function __project_parse_args
{
	__ARG_BUILD=0
	__ARG_CLEAN=0
	__ARG_RUN=0
	__ARG_VERBOSE=0
	__ARG_INDEX=0

	while [ ${#} -gt 0 ]; do
		case ${1} in
			build)
			__ARG_BUILD=1
			;;
			clean)
			__ARG_CLEAN=1
			;;
			run)
			__ARG_RUN=1
			;;
			verbose)
			__ARG_VERBOSE=1
			;;
			--)
			((__ARG_INDEX += 2))
			return
			;;
			*)
			__project_error "Unknown argument: ${1}"
			return 1
			;;
		esac

		shift
		((__ARG_INDEX++))
	done

	((__ARG_INDEX++))
	return 0
}

function __project_do
{
	local cmds=(${@})
	for cmd in ${cmds[@]}; do
		__project_status "${cmd}"
		eval "${cmd}"
	done
}

function __project_info
{
	if [ -n ${__ARG_VERBOSE} ] && [ ${__ARG_VERBOSE} -eq 1 ]; then
		echo "clean: ${__ARG_CLEAN}"
		echo "build: ${__ARG_BUILD}"
		echo "run: ${__ARG_RUN}"
		echo "arguments: ${@}"
	fi
}

function __project_clean
{
	if [ -n ${__ARG_CLEAN} ] && [[ ${__ARG_CLEAN} -eq 1 ]]; then
		if [ -d build ]; then
			__project_do "rm -r build"
		else
			__project_error "Nothing to clean?"
		fi
	fi
}

function __project_build
{
	if [ -n ${__ARG_BUILD} ] && [[ ${__ARG_BUILD} -eq 1 ]]; then
		__project_do			\
			"mkdir -p build"	\
			"cd build"		\
			"cmake .. -G Ninja"	\
			"ninja"			\
			"cd .."
	fi
}

function __project_run
{
	if [ -n ${__ARG_RUN} ] && [[ ${__ARG_RUN} -eq 1 ]]; then
		if [ -f build/dist/bin/lc ]; then
			__project_do "./build/dist/bin/lc ${@}"
		else
			__project_error "The project has not been built?"
		fi
	fi
}

function project
{
	local command='import time; print(time.time());'
	local start=$(python3 -c ${command})

	if __project_parse_args "${@}"; then
		local args="${@:${__ARG_INDEX}}"

		__project_info "${args}"
		__project_clean "${args}"
		__project_build "${args}"
		__project_run "${args}"

		local end=$(python3 -c ${command})
		local total=$((end - start))
		local result=$(printf "%.3f" ${total})

		__project_status "Finished in ${result}s ðŸŽ‰"
	else
		__project_status "Exited"
	fi
}
